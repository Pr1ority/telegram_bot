version: '3.8'

services:
  web:
    container_name: telegram-bot-service
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - '8080:8080'
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/static
    networks:
      - internal
  
  bot:
    container_name: telegram-worker
    build:
      context: .
      dockerfile: bot/Dockerfile
    command: ['python', bot.py]
    depends_on:
      - db
      - web
    env_file: .env
    networks:
      - internal
      
  db:
    image: postgres:13
    container_name: postgres
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
     - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'sh -c "pg_isready -U user -d bot"']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

networks:
  internal:
  
volumes:
  pg_data:
  static_volume: